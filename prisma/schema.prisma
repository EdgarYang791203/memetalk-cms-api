// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  xata_id        String   @unique(map: "user_xata_id_unique") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  displayName    String
  photoURL       String
  uid            String @unique
  email          String
  @@map("user")
}

model Meme {
  xata_id        String   @id @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))  // 自動生成並設為主鍵
  xata_version   Int      @default(0)
  xata_createdat DateTime @default(now()) @db.Timestamptz(6)
  xata_updatedat DateTime @default(now()) @db.Timestamptz(6)
  title             String
  src               String
  url               String
  memeId            Int @unique
  pageview          Int
  total_like_count  Int
  tags              Json
  liked_user        String[]
  created_date      String
  hashtag           String?
  comments         Comment[]
  @@map("meme")
}

model Comment {
  xata_id         String    @unique(map: "comment_xata_id_unique") @default(dbgenerated("('rec_'::text || (xata_private.xid())::text)"))  // 自動生成並設為主鍵
  xata_createdat  DateTime  @default(now()) @db.Timestamptz(6)
  name            String
  content         String
  avatar          String?
  memeId          Int       // 關聯到 Meme 的 memeId
  meme            Meme      @relation(fields: [memeId], references: [memeId], onDelete: Cascade)
  @@map("comment")
}
